services:
  mlservice:
    # build:
    #   context: ./ml_service/app
    image: sengar001/cvss-mlservice:latest
    container_name: cvss-mlservice
    ports:
      - "8000:8000"
    networks:
      - cvss-net

  backend:
    # build:
    #   context: ./backend
    image: sengar001/cvss-backend:latest
    container_name: cvss-backend1
    ports:
      - "5000:5000"
    environment:
      - ML_SERVICE_URL=http://mlservice:8000
    networks:
      - cvss-net
    depends_on:
      - mlservice

  frontend:
    # build:
    #   context: ./frontend
    image: sengar001/cvss-frontend:latest
    container_name: cvss-frontend
    ports:
      - "3000:80"
    environment:
      - BACKEND_URL=http://backend:5000/api
    networks:
      - cvss-net
    depends_on:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    networks:
      - cvss-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    volumes:
      - ./elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - cvss-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - cvss-net

networks:
  cvss-net:
    driver: bridge
